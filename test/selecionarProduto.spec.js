// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');

describe('Selecionar produto', function () {
    this.timeout(30000); // Espera até 30s pelo carregamento
    let driver; // Declaração do objeto para o Selenium
    let vars;

    // O que ocorre antes do teste
    beforeEach(async function () {
        driver = await new Builder().forBrowser('chrome').build(); // Instancia o driver como ChromeDriver
        vars = {};
        driver.manage().setTimeouts({ implicit: 3000 }); // Define uma espera de até 3s para a seleção de qualquer elemento - Espera até 3s
    });

    // O que ocorre depois do teste
    afterEach(async function () {
        await driver.quit(); // Destrói a instancia do Selenium
    });

    // O teste
    it('Selecionar produto', async function () {
        await driver.get('https://www.saucedemo.com/');
        await driver.manage().window().setRect({ width: 1860, height: 942 });
        await driver.findElement(By.css('*[data-test="login-credentials"]')).click();
        await driver.findElement(By.css('*[data-test="username"]')).click();
        await driver.findElement(By.css('*[data-test="username"]')).sendKeys('standard_user');
        await driver.findElement(By.css('*[data-test="login-password"]')).click();
        await driver.findElement(By.css('*[data-test="password"]')).click();
        await driver.findElement(By.css('*[data-test="password"]')).sendKeys('secret_sauce');
        {
            const elements = await driver.findElements(By.css('*[data-test="login-button"]'));
            assert(elements.length);
        }
        await driver.findElement(By.css('*[data-test="login-button"]')).click();
        assert((await driver.findElement(By.css('*[data-test="title"]')).getText()) == 'Products');
        await driver.findElement(By.css('*[data-test="inventory-item-name"]')).click();
        assert(
            (await driver.findElement(By.css('*[data-test="back-to-products"]')).getText()) ==
                'Back to products'
        );
        await driver.findElement(By.css('*[data-test="add-to-cart"]')).click();
        assert(
            (await driver.findElement(By.css('*[data-test="shopping-cart-badge"]')).getText()) ==
                '1'
        );
        await driver.findElement(By.css('*[data-test="shopping-cart-link"]')).click();
        assert((await driver.findElement(By.css('*[data-test="title"]')).getText()) == 'Your Cart');
        assert((await driver.findElement(By.css('*[data-test="item-quantity"]')).getText()) == '1');
        assert(
            (await driver.findElement(By.css('*[data-test="inventory-item-name"]')).getText()) ==
                'Sauce Labs Backpack'
        );
        assert(
            (await driver.findElement(By.css('*[data-test="inventory-item-price"]')).getText()) ==
                '$29.99'
        );
        await driver.findElement(By.css('*[data-test="remove-sauce-labs-backpack"]')).click();
        await driver.findElement(By.id('react-burger-menu-btn')).click();
        // await driver.sleep(3000); // Espero bruta - parar a thread/trilha de processamento em 3s - algo temporário (NOta: não é uma boa prática deixar no código, mas para fins de estudo estou deixando)
        await driver.findElement(By.css('*[data-test="logout-sidebar-link"]')).click();
    });
});
